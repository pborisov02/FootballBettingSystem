@model GameServiceModel;
@{
	ViewBag.Title = "Games";
}
<link rel="stylesheet" href="~/css/game_card_stylesheet.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/one_game_bets_stylesheet.css" asp-append-version="true" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<h2>@ViewBag.Title</h2>
<hr />

<partial name="_GamesFilterPartial" model="@Model" />
<div class="layoutContainer">
<div>
	<partial name="_GamesCardsPartial" model="@Model.Games" />
</div>
	<div class="betGameInput">
		<div class="oneGameBets">
			<ul id = "oneGameBetsList">
			</ul>
		</div>
		<div class="userBetInput">
			<input name="text" class="BetAmmountInput" pattern="^(\d{1,5}|\d{0,5}\.\d{1,2})$" placeholder="Bet ammount">
			<button class="MakeABetButton">
				<span class="MakeABetButton-content">Make a bet</span>
			</button>
		</div>
	</div>
</div>


@section Scripts{
	<partial name="_ValidationScriptsPartial" />
	<script>
		modelData = @Json.Serialize(Model.OneGameBets);
	</script>
	<script>
		$(document).ready(function () {
			function populateGames(data) {
				var gamesList = $('#listOfGames');
				gamesList.empty(); 

				let leagueName = '';
				$.each(data, function (index, game) {
					if (game.league.name != leagueName) {
						leagueName = game.league.name;
						var listItem = $('<li class="LeagueLi"></li>');
						var card = $('<div class="league"></div>');
						card.append('<div class="league">' + leagueName + '</div>');
						listItem.append(card);
						gamesList.append(listItem);
					}
					var listItem = $('<li ></li>');
					var card = $('<div class="card"></div>');

					card.append('<div class="home">' + game.homeTeam.name + '</div>');
					card.append('<div class="away">' + game.awayTeam.name + '</div>');
					card.append('<div class="time">' + game.startFormatted + '</div>');
					card.append('<div class="vs">' + 'vs' + '</div>');
					card.append('<button class="prediction-button"  data-info="' + game.id + '" data-key="1" id="home">' + '<span>' + game.homeOdd.toFixed(2) + '</span>' + '<span></span>' + '</button>');
					card.append('<button class="prediction-button"  data-info="' + game.id + '" data-key="0" id="draw">' + '<span>' + game.drawOdd.toFixed(2) + '</span>' + '<span></span>' + '</button>');
					card.append('<button class="prediction-button"  data-info="' + game.id + '" data-key="2"  id="away">' + '<span>' + game.awayOdd.toFixed(2) + '</span>' + '<span></span>' + '</button>');
					card.append('<div class="line-1"></div>');
					card.append('<div class="line-2"></div>');
					card.append('<div id="home">home</div>');
					card.append('<div id="draw">draw</div>');
					card.append('<div id="away">away</div>');
					listItem.append(card);
					gamesList.append(listItem);
				});
			}
			function populateOneGamesBets(data) {
				var oneGamesList = $('#oneGameBetsList');
				oneGamesList.empty();
				$.each(data, function (index, item) {
					var game = item.game;
					var prediction = item.prediction;
					var multiplier = item.multiplier;

					var listItem = $('<li></li>');
					var card = $('<div class="betCard" id =' + game.id + '></div>');
					card.append('<div class="betCard__content"></div>');
					card.append('<p class="BetHomeTeam">' + game.homeTeam.name + '</p>');
					card.append('<p class="BetAwayTeam">' + game.awayTeam.name + '</p>');
					card.append('<p class="BetVs">vs</p>');
					card.append('<p class="BetMultiplier">' + multiplier.toFixed(2) + '</p>');
					card.append('<p class="BetDate">' + game.start[5] + game.start[6] + '/' + game.start[8] + game.start[9] +'</p>');
					card.append('<p class="BetTime">' + game.startFormatted + '</p>');
					card.append('<button class="remove" value="' + game.id + '">X</button>');

					listItem.append(card);
					oneGamesList.append(listItem);
				});
			}

			$('#leagueDropdown').on('change', function () {
				var requestData = {
					leagueId: $(this).val(),
					days: $('input[name="DaysToAdd"]:checked').val()
					
				};

				$.ajax({
					url: '/Game/GetGamesByLeagueAndDate',
					type: 'GET',
					data: requestData,
					success: function (data) {
						populateGames(data);
					},
					error: function () {
						console.log('Error fetching games.');
					}
				});
			});

			$('#DateRadioBtns').on('change', function () {
				var requestData = {
					leagueId: $('#leagueDropdown').val(),
					days: $('input[name="DaysToAdd"]:checked').val()
					
				};

				$.ajax({
					url: '/Game/GetGamesByLeagueAndDate',
					type: 'GET',
					data: requestData,
					success: function (data) {
						populateGames(data);
					},
					error: function () {
						console.log('Error fetching games.');
					}
				});
			});

			$('#listOfGames').on('click', '.prediction-button', function (event) {
				event.stopPropagation();

				var requestData = {
					gameId: $(this).data('info'),
					prediction: $(this).data('key')
				};

				var prediction = $(this).data('key');
				
				for (let i = 0; i < modelData.length; i++) {
					if (modelData[i].game.id == requestData.gameId) {
						modelData.splice(i, 1);
						break;
					}
				}

				$.ajax({
					url: '/Bet/CreateOneGameBet',
					type: 'GET',
					data: requestData,
					success: function (data) {
						modelData.push(data);
						populateOneGamesBets(modelData);
					},
					error: function () {
						console.log('Error fetching games.');
					}
				});
			});

			$('#oneGameBetsList').on('click', '.remove', function () {
				var gameId = $(this).val();
				for (let i = 0; i < modelData.length; i++) {
					if (modelData[i].game.id == gameId) {
						modelData.splice(i, 1);
						break;
					}
				}
				populateOneGamesBets(modelData);
			});
			$('.MakeABetButton').on('click', function () {
				var betAmount = $('.BetAmmountInput').val();
				var betAmountAsDec = parseFloat(betAmount)
				if (!isValidBetAmount(betAmount) || betAmountAsDec<2.00 ) {
					alert('Invalid bet amount. The bet ammount should be a number bigger than 2.00!.');
					return; 
				}
				if(modelData.length < 1)
				{
					alert('Error! You have to select a game before making a bet!');
					return;
				}

				$.ajax({
					url: '/BET/CreateBet',
					type: 'POST',
					data: {
						betAmount: betAmount,
						oneGameBets: modelData 
					},
					success: function (data) {
						 if (data == 0) {
							alert("There was a problem creating your bet, please check if the selected games and the bet amount are valid.");
						} else {
							window.location.href = '/Bet/UserBets';
    }
					},
					error: function () {
						console.log('Error making the bet.');
					}
				});
			});
		});
		function isValidBetAmount(amount) {
			var regex = /^(\d{1,5}|\d{0,5}\.\d{1,2})$/;
			return regex.test(amount);
		}
	</script>
}