@model GamesForUpdateQueryModel

@{
	ViewBag.Title = "Games for update";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
	<div class="row">
		<div class="form-group col-md-3 d-flex justify-content-between">
			<div class="form-group">
				<label asp-for="League"></label>
				<select asp-for="League" class="form-control">
					<option value="">All</option>
					@foreach (var league in Model.Leagues)
					{
						<option value="@league">@league</option>
					}
				</select>
			</div>
		</div>
		<div class="form-group col-md-3">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="Team name">
		</div>
		<div class="form-group col-md-3">
			<label asp-for="From"></label>
			<input asp-for="From" type="date" class="form-control">
		</div>
		<div class="form-group col-md-3">
			<label asp-for="To"></label>
			<input asp-for="To" type="date" class="form-control">
		</div>
		<div class="col-md-3">
			<div class="form-group mt-4 p-2">
				<input type="submit" value="Search" class="btn btn-primary" />
			</div>
		</div>
	</div>
</form>
@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}
	var maxPage = Math.Ceiling((double)Model.GamesCount / 10);
}
<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
		   asp-controller="Game"
		   asp-action="ShowGamesForUpdate"
		   asp-route-queryModel="@Model"
		   asp-route-currentPage="@previousPage"><<</a>
	</div>
	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.GamesForUpdate.Any();
	}
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary
 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Game"
		   asp-action="ShowGamesForUpdate"
		   asp-route-queryModel="@Model"
		   asp-route-currentPage="@(Model.CurrentPage + 1)">>></a>
	</div>
</div>
@if (!Model.GamesForUpdate.Any())
{
	<h2 class="text-center">No games found for the given criteria</h2>
}
<div class="row">
	@foreach (var game in Model.GamesForUpdate)
	{
		<partial name="_GamesForUpdatePartial" model="@game" />
	}
</div>